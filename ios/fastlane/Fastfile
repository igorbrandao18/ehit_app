# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do
    # Sync certificates and provisioning profiles
    match(type: "appstore", readonly: true)
    
    # Build Flutter app first
    flutter_build_ios
    
    # Increment build number
    increment_build_number(xcodeproj: "Runner.xcodeproj")
    
    # Build the iOS app
    build_app(
      workspace: "Runner.xcworkspace",
      scheme: "Runner",
      export_method: "app-store",
      export_options: {
        method: "app-store",
        teamID: "W66MTSPZ69",
        uploadBitcode: false,
        uploadSymbols: true,
        compileBitcode: false
      }
    )
    
    # Upload to TestFlight
    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      changelog: "New build with latest features and improvements"
    )
  end

  desc "Build and upload to TestFlight with custom changelog"
  lane :beta_with_changelog do |options|
    changelog = options[:changelog] || "New build with latest features and improvements"
    
    # Sync certificates and provisioning profiles
    match(type: "appstore", readonly: true)
    
    # Build Flutter app first
    flutter_build_ios
    
    # Increment build number
    increment_build_number(xcodeproj: "Runner.xcodeproj")
    
    # Build the iOS app
    build_app(
      workspace: "Runner.xcworkspace",
      scheme: "Runner",
      export_method: "app-store",
      export_options: {
        method: "app-store",
        teamID: "W66MTSPZ69",
        uploadBitcode: false,
        uploadSymbols: true,
        compileBitcode: false
      }
    )
    
    # Upload to TestFlight
    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      changelog: changelog
    )
  end

  desc "Build app for App Store"
  lane :release do
    # Sync certificates and provisioning profiles
    match(type: "appstore", readonly: true)
    
    # Build Flutter app first
    flutter_build_ios
    
    # Increment build number
    increment_build_number(xcodeproj: "Runner.xcodeproj")
    
    # Build the iOS app
    build_app(
      workspace: "Runner.xcworkspace",
      scheme: "Runner",
      export_method: "app-store",
      export_options: {
        method: "app-store",
        teamID: "W66MTSPZ69",
        uploadBitcode: false,
        uploadSymbols: true,
        compileBitcode: false
      }
    )
    
    # Upload to App Store
    upload_to_app_store(
      force: true,
      skip_metadata: false,
      skip_screenshots: false
    )
  end

  desc "Setup certificates and provisioning profiles for the first time"
  lane :match_setup do
    match(type: "appstore", force_for_new_devices: true)
  end

  desc "Build Flutter iOS app"
  private_lane :flutter_build_ios do
    sh("cd .. && flutter clean")
    sh("cd .. && flutter pub get")
    sh("cd .. && flutter build ios --release --no-codesign")
  end
end
